name: acl-cross-platform-build

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - docs/**
      - '**/*.md'

jobs:
  linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build linux x86 SSE2
        run: |
          cmake -DCMAKE_BUILD_TYPE:STRING="RelWithDebInfo" -DCMAKE_CXX_COMPILER="clang-12" -B "build_linux_sse2"
          cmake --build build_linux_sse2
      - name: Build linux x86 AVX
        run: |
          cmake -DCMAKE_BUILD_TYPE:STRING="RelWithDebInfo" -DACLUNITY_IS_AVX:BOOL="True" -DCMAKE_CXX_COMPILER="clang-12" -B "build_linux_avx"
          cmake --build build_linux_avx
      - name: Build Android
        run: |
          cmake -DCMAKE_BUILD_TYPE:STRING="RelWithDebInfo" -DCMAKE_TOOLCHAIN_FILE="cmake/android-toolchain.cmake" -B "build_android"
          cmake --build build_android
      - name: Upload linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifacts
          path: |
            ./build*/**/*.so*
            ./build*/**/*.s
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
            
  windows:
    runs-on: windows-2019
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build windows x86 SSE2
        run: |
          cmake -DCMAKE_BUILD_TYPE:STRING="RelWithDebInfo" -B "build_windows_sse2"
          cmake --build build_windows_sse2 --config RelWithDebInfo
      - name: Build windows x86 AVX
        run: |
          cmake -DCMAKE_BUILD_TYPE:STRING="RelWithDebInfo" -DACLUNITY_IS_AVX:BOOL="True" -B build_windows_avx
          cmake --build build_windows_avx --config RelWithDebInfo
      - name: Upload windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifacts
          path: |
            ./build*/**/*.dll
            ./build*/**/*.pdb
            ./build*/**/*.asm
            
  osx:
    runs-on: macos-12
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build osx arm
        run: |
          cmake -DCMAKE_BUILD_TYPE:STRING="RelWithDebInfo" -DCMAKE_OSX_ARCHITECTURES:STRING="arm64" -B build_osx_arm
          cmake --build build_osx_arm
      - name: Build osx x86 SSE2
        run: |
          cmake -DCMAKE_BUILD_TYPE:STRING="RelWithDebInfo" -DCMAKE_OSX_ARCHITECTURES:STRING="x86_64" -B build_osx_x86_sse2
          cmake --build build_osx_x86_sse2
      - name: Build osx x86 AVX
        run: |
          cmake -DCMAKE_BUILD_TYPE:STRING="RelWithDebInfo" -DCMAKE_OSX_ARCHITECTURES:STRING="x86_64" -DACLUNITY_IS_AVX:BOOL="True" -B build_osx_x86_avx
          cmake --build build_osx_x86_avx
      - name: Upload osx artifacts
        uses: actions/upload-artifact@v3
        with:
          name: osx-artifacts
          path: |
            ./build*/**/*.dylib
            ./build*/**/*.s